* 配置信息
- System Information
  - Manufacturer: Dell Inc.
  - Product Name: Inspiron 620
- OS

  Ubuntu 14.04.2 LTS

- CPU

  Intel(R) Core(TM) i5-2320 CPU @ 3.00GHz

- Memory

  4 GB 1333 MHz

- Hard Drive

  1 TB 7200 rpm
* 查询优化
** 单表操作
*** 查询表中的所有字段
1. 查询 basic 表
   1) 原查询

      实际应用中会出现查询所有店铺信息的情况，比如查询 basic
      表中的所有字段的结果

      #+BEGIN_SRC sql
        explain select *
        from basic;
      #+END_SRC

      #+BEGIN_EXAMPLE
        +----+-------------+-------+------+---------------+------+---------+------+------+-------+
        | id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra |
        +----+-------------+-------+------+---------------+------+---------+------+------+-------+
        | 1  | SIMPLE      | basic | ALL  | NULL          | NULL | NULL    | NULL | 963  | NULL  |
        +----+-------------+-------+------+---------------+------+---------+------+------+-------+
        1 rows in set (0.05 sec)
      #+END_EXAMPLE

      可见 rows 为 963

   2) 无法优化

      查询所有字段需遍历表中所有元组，无法再进一步优化了

2. 查询所有小类
   1) 原查询

      #+BEGIN_SRC sql
        explain select *
        from small_cate_id_small_cate;
      #+END_SRC

      #+BEGIN_EXAMPLE
        +----+-------------+--------------------------+------+---------------+------+---------+------+------+-------+
        | id | select_type | table                    | type | possible_keys | key  | key_len | ref  | rows | Extra |
        +----+-------------+--------------------------+------+---------------+------+---------+------+------+-------+
        |  1 | SIMPLE      | small_cate_id_small_cate | ALL  | NULL          | NULL | NULL    | NULL |   37 | NULL  |
        +----+-------------+--------------------------+------+---------------+------+---------+------+------+-------+
        1 row in set (0.03 sec)
      #+END_EXAMPLE

   2) 无法优化

      查询所有字段需遍历表中所有元组，无法再进一步优化了
*** 查询表中的指定字段
1. 查询所有店铺的名称
   1) 原查询

      #+BEGIN_SRC sql
        explain select name
        from basic;
      #+END_SRC

      #+BEGIN_EXAMPLE
        +----+-------------+-------+------+---------------+------+---------+------+------+-------+
        | id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra |
        +----+-------------+-------+------+---------------+------+---------+------+------+-------+
        | 1  | SIMPLE      | basic | ALL  | NULL          | NULL | NULL    | NULL | 963  | NULL  |
        +----+-------------+-------+------+---------------+------+---------+------+------+-------+
        1 rows in set (0.05 sec)
      #+END_EXAMPLE

      可见 rows 为 963

   2) 无法优化

      该查询需遍历表中所有元组，无法再进一步优化了

2. 查询优惠表中的所有团购信息
   1) 原查询

      #+BEGIN_SRC sql
        explain select group_info
        from discount;
      #+END_SRC

      #+BEGIN_EXAMPLE
        +----+-------------+----------+------+---------------+------+---------+------+------+-------+
        | id | select_type | table    | type | possible_keys | key  | key_len | ref  | rows | Extra |
        +----+-------------+----------+------+---------------+------+---------+------+------+-------+
        |  1 | SIMPLE      | discount | ALL  | NULL          | NULL | NULL    | NULL | 1000 | NULL  |
        +----+-------------+----------+------+---------------+------+---------+------+------+-------+
        1 row in set (0.00 sec)
      #+END_EXAMPLE

   2) 无法优化

      该查询需遍历表中所有元组，无法再进一步优化了
*** 查询表中没有重复的字段（distinct）的使用
1. 查询不重名的所有店铺名称
   1) 原查询

      #+BEGIN_SRC sql
        explain select distinct name
        from basic;
      #+END_SRC

      #+BEGIN_EXAMPLE
        +----+-------------+-------+------+---------------+------+---------+------+------+-----------------+
        | id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra           |
        +----+-------------+-------+------+---------------+------+---------+------+------+-----------------+
        | 1  | SIMPLE      | basic | ALL  | NULL          | NULL | NULL    | NULL | 963  | Using temporary |
        +----+-------------+-------+------+---------------+------+---------+------+------+-----------------+
        1 rows in set (0.05 sec)
      #+END_EXAMPLE

      可见 rows 为 963

   2) 无法优化

      该查询需遍历表中所有元组，无法再进一步优化了

2. 查询所有地图类型
   1) 原查询

      #+BEGIN_SRC sql
        explain select distinct map_type
        from map_info;
      #+END_SRC

      #+BEGIN_EXAMPLE
        +----+-------------+----------+------+---------------+------+---------+------+------+-----------------+
        | id | select_type | table    | type | possible_keys | key  | key_len | ref  | rows | Extra           |
        +----+-------------+----------+------+---------------+------+---------+------+------+-----------------+
        |  1 | SIMPLE      | map_info | ALL  | NULL          | NULL | NULL    | NULL | 1000 | Using temporary |
        +----+-------------+----------+------+---------------+------+---------+------+------+-----------------+
        1 row in set (0.00 sec)
      #+END_EXAMPLE

   2) 添加索引

      #+BEGIN_SRC sql
        create index index_map_type on map_info(map_type);
      #+END_SRC

      再次查询

      #+BEGIN_EXAMPLE
        +----+-------------+----------+-------+----------------+----------------+---------+------+------+--------------------------+
        | id | select_type | table    | type  | possible_keys  | key            | key_len | ref  | rows | Extra                    |
        +----+-------------+----------+-------+----------------+----------------+---------+------+------+--------------------------+
        |  1 | SIMPLE      | map_info | range | index_map_type | index_map_type | 1       | NULL |    5 | Using index for group-by |
        +----+-------------+----------+-------+----------------+----------------+---------+------+------+--------------------------+
        1 row in set (0.02 sec)
      #+END_EXAMPLE

      rows 变为 5 ，效率显著提高
*** 条件查询各表主键的字段（单值查询或范围查询）
1. 用一个精确的店编号去查找店铺信息
   1) 原查询

      比如查找 basic 中 shop_id=10328540 的店铺信息

      #+BEGIN_SRC sql
        explain select *
        from basic
        where shop_id=10328540;
      #+END_SRC

      #+BEGIN_EXAMPLE
        +----+-------------+-------+-------+---------------+---------+---------+-------+------+-------+
        | id | select_type | table | type  | possible_keys | key     | key_len | ref   | rows | Extra |
        +----+-------------+-------+-------+---------------+---------+---------+-------+------+-------+
        | 1  | SIMPLE      | basic | const | PRIMARY       | PRIMARY | 4       | const | 1    | NULL  |
        +----+-------------+-------+-------+---------------+---------+---------+-------+------+-------+
        1 rows in set (0.05 sec)
      #+END_EXAMPLE

      可见 rows 已经为 1

   2) 无需优化

      因为表创建时已经自带以主键为关键值的索引，无需优化
2. 用店编号范围去查找一部分店铺信息
   1) 原查询

      比如查找 basic 中 shop_id>10328540 and shop_id<10329940 的店铺信息

      #+BEGIN_SRC sql
        explain select *
        from basic
        where shop_id>10328540 and shop_id<10329940;
      #+END_SRC

      #+BEGIN_EXAMPLE
        +----+-------------+-------+-------+---------------+---------+---------+------+------+-------------+
        | id | select_type | table | type  | possible_keys | key     | key_len | ref  | rows | Extra       |
        +----+-------------+-------+-------+---------------+---------+---------+------+------+-------------+
        | 1  | SIMPLE      | basic | range | PRIMARY       | PRIMARY | 4       | NULL | 36   | Using where |
        +----+-------------+-------+-------+---------------+---------+---------+------+------+-------------+
        1 rows in set (0.01 sec)
      #+END_EXAMPLE

      可见 rows 已经为36

    2) 无需优化

       因为表创建时已经自带以主键为关键值的索引，无需优化
*** 条件查询各表中普通字段（单值查询或范围查询）
1. 用店名来查找店铺信息
   1) 原查询
      比如查找 base 中 name 为「林师傅」的结果

      #+BEGIN_SRC sql
        explain select *
        from basic
        where name='林师傅';
      #+END_SRC

      #+BEGIN_EXAMPLE
        +----+-------------+-------+------+---------------+------+---------+------+------+-------------+
        | id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra       |
        +----+-------------+-------+------+---------------+------+---------+------+------+-------------+
        | 1  | SIMPLE      | basic | ALL  | NULL          | NULL | NULL    | NULL | 963  | Using where |
        +----+-------------+-------+------+---------------+------+---------+------+------+-------------+
        1 rows in set (0.03 sec)
      #+END_EXAMPLE

      可见 rows 为 963

   2) 对 name 进行索引

      #+BEGIN_SRC sql
        create index index_name on basic(name);
      #+END_SRC

      再次查找

      #+BEGIN_EXAMPLE
        +----+-------------+-------+------+---------------+------------+---------+-------+------+-----------------------+
        | id | select_type | table | type | possible_keys | key        | key_len | ref   | rows | Extra                 |
        +----+-------------+-------+------+---------------+------------+---------+-------+------+-----------------------+
        | 1  | SIMPLE      | basic | ref  | index_name    | index_name | 150     | const | 1    | Using index condition |
        +----+-------------+-------+------+---------------+------------+---------+-------+------+-----------------------+
        1 rows in set (0.04 sec)
      #+END_EXAMPLE

      可见 rows 已经变为 1，是优化前的0.1%
2. 查找人均消费在某一范围内的的店铺名称
   1) 原查询

      比如查找 base 中 avg\_price<50 的结果

      #+BEGIN_SRC sql
        explain select name
        from basic
        where avg_price<50;
      #+END_SRC

      #+BEGIN_EXAMPLE
        +----+-------------+-------+------+---------------+------+---------+------+------+-------------+
        | id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra       |
        +----+-------------+-------+------+---------------+------+---------+------+------+-------------+
        | 1  | SIMPLE      | basic | ALL  | NULL          | NULL | NULL    | NULL | 963  | Using where |
        +----+-------------+-------+------+---------------+------+---------+------+------+-------------+
        1 rows in set (0.03 sec)
      #+END_EXAMPLE

      可见 rows 为 963

   2) 对 avg\_price,name 进行索引

      #+BEGIN_SRC sql
        create index index_name_price on basic(avg_price,name);
      #+END_SRC

      再次查找

      #+BEGIN_EXAMPLE
        +----+-------------+-------+-------+------------------+------------------+---------+------+------+--------------------------+
        | id | select_type | table | type  | possible_keys    | key              | key_len | ref  | rows | Extra                    |
        +----+-------------+-------+-------+------------------+------------------+---------+------+------+--------------------------+
        | 1  | SIMPLE      | basic | range | index_name_price | index_name_price | 2       | NULL | 617  | Using where; Using index |
        +----+-------------+-------+-------+------------------+------------------+---------+------+------+--------------------------+
        1 rows in set (0.05 sec)
      #+END_EXAMPLE

      可见 rows 已经变为617,是优化前的64%
*** 一个表中多个字段条件查询（单值查询或范围查询）
1. 多条件查询 remark 表中的 shop_id
   1) 原查询

      #+BEGIN_SRC sql
        explain select shop_id
        from remark
        where product_rating > 8.5 and environment_rating > 8.5;

        -- +----+-------------+--------+------+---------------+------+---------+------+------+-------------+
        -- | id | select_type | table  | type | possible_keys | key  | key_len | ref  | rows | Extra       |
        -- +----+-------------+--------+------+---------------+------+---------+------+------+-------------+
        -- |  1 | SIMPLE      | remark | ALL  | NULL          | NULL | NULL    | NULL | 1000 | Using where |
        -- +----+-------------+--------+------+---------------+------+---------+------+------+-------------+
        -- 1 row in set (0.00 sec)
      #+END_SRC

      可见 rows 为 1000

   2) 添加索引

      #+BEGIN_SRC sql
        create index index_product_rating on remark(product_rating);
        create index index_environment_rating on remark(environment_rating);
      #+END_SRC

   3) 优化后

      #+BEGIN_SRC sql
        explain select shop_id
        from remark
        where product_rating > 8.5 and environment_rating > 8.5;

        -- +----+-------------+--------+-------+-----------------------------------------------+----------------------+---------+------+------+------------------------------------+
        -- | id | select_type | table  | type  | possible_keys                                 | key                  | key_len | ref  | rows | Extra                              |
        -- +----+-------------+--------+-------+-----------------------------------------------+----------------------+---------+------+------+------------------------------------+
        -- |  1 | SIMPLE      | remark | range | index_product_rating,index_environment_rating | index_product_rating | 5       | NULL |   52 | Using index condition; Using where |
        -- +----+-------------+--------+-------+-----------------------------------------------+----------------------+---------+------+------+------------------------------------+
        -- 1 row in set (0.00 sec)
      #+END_SRC

      优化后 rows 变为 52 ，效率显著提高

2. 通过 name 和 alias 查询 phone
   1) 原查询

      #+BEGIN_SRC sql
        explain select phone from basic
        where name = '巫山烤全鱼' and alias = '重庆鸡公煲';
      #+END_SRC

      #+BEGIN_EXAMPLE
        +----+-------------+-------+------+---------------+------+---------+------+------+-------------+
        | id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra       |
        +----+-------------+-------+------+---------------+------+---------+------+------+-------------+
        |  1 | SIMPLE      | basic | ALL  | NULL          | NULL | NULL    | NULL |  963 | Using where |
        +----+-------------+-------+------+---------------+------+---------+------+------+-------------+
        1 row in set (0.00 sec)
      #+END_EXAMPLE

      可见 rows 为 963 ，有优化空间

   2) 添加索引

      #+BEGIN_SRC sql
        create index index_name on basic(name);
      #+END_SRC

      #+BEGIN_EXAMPLE
        +----+-------------+-------+------+---------------+------------+---------+-------+------+------------------------------------+
        | id | select_type | table | type | possible_keys | key        | key_len | ref   | rows | Extra                              |
        +----+-------------+-------+------+---------------+------------+---------+-------+------+------------------------------------+
        |  1 | SIMPLE      | basic | ref  | index_name    | index_name | 150     | const |    3 | Using index condition; Using where |
        +----+-------------+-------+------+---------------+------------+---------+-------+------+------------------------------------+
        1 row in set (0.00 sec)
      #+END_EXAMPLE

      rows 降为 3

      #+BEGIN_SRC sql
        create index index_alias on basic(alias);
      #+END_SRC

      #+BEGIN_EXAMPLE
        +----+-------------+-------+------+------------------------+-------------+---------+-------+------+------------------------------------+
        | id | select_type | table | type | possible_keys          | key         | key_len | ref   | rows | Extra                              |
        +----+-------------+-------+------+------------------------+-------------+---------+-------+------+------------------------------------+
        |  1 | SIMPLE      | basic | ref  | index_name,index_alias | index_alias | 120     | const |    1 | Using index condition; Using where |
        +----+-------------+-------+------+------------------------+-------------+---------+-------+------+------------------------------------+
        1 row in set (0.07 sec)
      #+END_EXAMPLE

      rows 降为 1 ，效率显著提高

   3) 更改查询语句顺序 + 索引

      由于 alias 上大多为空值，重复率较低，可先查询 alias 再查询 name

      #+BEGIN_SRC sql
        create index index_alias on basic(alias);

        explain select phone from basic
        where alias = '重庆鸡公煲' and name = '巫山烤全鱼';
      #+END_SRC

      #+BEGIN_EXAMPLE
        +----+-------------+-------+------+---------------+-------------+---------+-------+------+------------------------------------+
        | id | select_type | table | type | possible_keys | key         | key_len | ref   | rows | Extra                              |
        +----+-------------+-------+------+---------------+-------------+---------+-------+------+------------------------------------+
        |  1 | SIMPLE      | basic | ref  | index_alias   | index_alias | 120     | const |    1 | Using index condition; Using where |
        +----+-------------+-------+------+---------------+-------------+---------+-------+------+------------------------------------+
        1 row in set (0.00 sec)
      #+END_EXAMPLE

      rows 降为 1 ，效率显著提高
*** 用”in”进行条件查询
1. 用几个 small_cate_id 来查询 shop_id
   1) 原查询

      #+BEGIN_SRC sql
        explain select shop_id
        from shop_id_small_cate_id
        where small_cate_id in ('g101', 'g103', 'g105', 'g107');

        -- +----+-------------+-----------------------+-------+---------------+---------------+---------+------+------+--------------------------+
        -- | id | select_type | table                 | type  | possible_keys | key           | key_len | ref  | rows | Extra                    |
        -- +----+-------------+-----------------------+-------+---------------+---------------+---------+------+------+--------------------------+
        -- |  1 | SIMPLE      | shop_id_small_cate_id | range | small_cate_id | small_cate_id | 18      | NULL |   76 | Using where; Using index |
        -- +----+-------------+-----------------------+-------+---------------+---------------+---------+------+------+--------------------------+
        -- 1 row in set (0.01 sec)
      #+END_SRC

      可见 rows 为 76

      1) 无需优化

         因为 small_cate_id 已经是 small_cate_id_small_cate 表的主键，已有索引，故
         无需优化。
*** 一个表中 group by、order by、having 联合条件查询
1. 按平均价格来查询
   1) 原查询

      #+BEGIN_SRC sql
        explain select * from basic
        where avg_price < 20
        order by avg_price;

        -- +----+-------------+-------+------+---------------+------+---------+------+------+-----------------------------+
        -- | id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra                       |
        -- +----+-------------+-------+------+---------------+------+---------+------+------+-----------------------------+
        -- |  1 | SIMPLE      | basic | ALL  | NULL          | NULL | NULL    | NULL |  963 | Using where; Using filesort |
        -- +----+-------------+-------+------+---------------+------+---------+------+------+-----------------------------+
        -- 1 row in set (0.00 sec)
      #+END_SRC

      可见 rows 为 963

   2) 利用索引进行优化

      #+BEGIN_SRC sql
        create index index_price on basic(avg_price);
      #+END_SRC

   3) 优化后

      #+BEGIN_SRC sql
        explain select * from basic
        where avg_price < 20
        order by avg_price;

        -- +----+-------------+-------+-------+---------------+-------------+---------+------+------+-----------------------+
        -- | id | select_type | table | type  | possible_keys | key         | key_len | ref  | rows | Extra                 |
        -- +----+-------------+-------+-------+---------------+-------------+---------+------+------+-----------------------+
        -- |  1 | SIMPLE      | basic | range | index_price   | index_price | 2       | NULL |  235 | Using index condition |
        -- +----+-------------+-------+-------+---------------+-------------+---------+------+------+-----------------------+
        -- 1 row in set (0.04 sec)
      #+END_SRC
** 复合查询
*** 多表联合查询
1. 查询某 city 的所有 shop_id
   1) 原查询

      #+BEGIN_SRC sql
        explain select shop_id
        from shop_id_city_id as SC, city_id_city as C
        where SC.city_id = C.city_id and C.city = '上海';

        -- +----+-------------+-------+------+---------------+---------+---------+----------------+------+-------------+
        -- | id | select_type | table | type | possible_keys | key     | key_len | ref            | rows | Extra       |
        -- +----+-------------+-------+------+---------------+---------+---------+----------------+------+-------------+
        -- |  1 | SIMPLE      | C     | ALL  | PRIMARY       | NULL    | NULL    | NULL           |   59 | Using where |
        -- |  1 | SIMPLE      | SC    | ref  | city_id       | city_id | 2       | test.C.city_id |    1 | Using index |
        -- +----+-------------+-------+------+---------------+---------+---------+----------------+------+-------------+
        -- 2 rows in set (0.01 sec)
      #+END_SRC

      可见 rows 为 59 * 1 ，因 city_id 为主键，故在 SC 表上无需优化

   2) 添加索引

      #+BEGIN_SRC sql
        create index index_city on city_id_city(city);
      #+END_SRC

   3) 优化后

      #+BEGIN_SRC sql
        explain select shop_id
        from shop_id_city_id as SC, city_id_city as C
        where SC.city_id = C.city_id and C.city = '上海';

        -- +----+-------------+-------+------+--------------------+------------+---------+----------------+------+--------------------------+
        -- | id | select_type | table | type | possible_keys      | key        | key_len | ref            | rows | Extra                    |
        -- +----+-------------+-------+------+--------------------+------------+---------+----------------+------+--------------------------+
        -- |  1 | SIMPLE      | C     | ref  | PRIMARY,index_city | index_city | 45      | const          |    1 | Using where; Using index |
        -- |  1 | SIMPLE      | SC    | ref  | city_id            | city_id    | 2       | test.C.city_id |    1 | Using index              |
        -- +----+-------------+-------+------+--------------------+------------+---------+----------------+------+--------------------------+
        -- 2 rows in set (0.01 sec)
      #+END_SRC

      可见 rows 变为 1 * 1 ，效率显著提高

2. 查询某小类下的所有商铺名
   1) 原查询

      #+BEGIN_SRC sql
        explain select B.shop_id, B.name
        from basic as B, shop_id_small_cate_id as SS
        where B.shop_id = SS.shop_id and SS.small_cate_id = 'g101';
      #+END_SRC

      #+BEGIN_EXAMPLE
        +----+-------------+-------+--------+-----------------------+---------------+---------+-----------------+------+--------------------------+
        | id | select_type | table | type   | possible_keys         | key           | key_len | ref             | rows | Extra                    |
        +----+-------------+-------+--------+-----------------------+---------------+---------+-----------------+------+--------------------------+
        |  1 | SIMPLE      | SS    | ref    | PRIMARY,small_cate_id | small_cate_id | 18      | const           |   32 | Using where; Using index |
        |  1 | SIMPLE      | B     | eq_ref | PRIMARY               | PRIMARY       | 4       | test.SS.shop_id |    1 | NULL                     |
        +----+-------------+-------+--------+-----------------------+---------------+---------+-----------------+------+--------------------------+
        2 rows in set (0.01 sec)
      #+END_EXAMPLE

      rows 为 32 * 1

   2) 无需优化

      因为 small_cate_id 和 shop_id 都是主键，已有索引，故无需优化
*** join 查询
1. 利用拼音查询城市名
   1) 原查询

      #+BEGIN_SRC sql
        explain select city
        from city_id_city as C
        inner join city_id_city_pinyin as CP
        where C.city_id = CP.city_id and CP.city_pinyin = 'shanghai';

        -- +----+-------------+-------+--------+---------------+---------+---------+----------------+------+-------------+
        -- | id | select_type | table | type   | possible_keys | key     | key_len | ref            | rows | Extra       |
        -- +----+-------------+-------+--------+---------------+---------+---------+----------------+------+-------------+
        -- |  1 | SIMPLE      | C     | ALL    | PRIMARY       | NULL    | NULL    | NULL           |   59 | NULL        |
        -- |  1 | SIMPLE      | CP    | eq_ref | PRIMARY       | PRIMARY | 2       | test.C.city_id |    1 | Using where |
        -- +----+-------------+-------+--------+---------------+---------+---------+----------------+------+-------------+
        -- 2 rows in set (0.01 sec)
      #+END_SRC

      可见 rows 为 59 * 1 ，因 city_id 为主键，故在 C 表上无需优化

   2) 添加索引

      #+BEGIN_SRC sql
        create index index_city_pinyin on city_id_city_pinyin(city_pinyin);
      #+END_SRC

   3) 优化后

      #+BEGIN_SRC sql
        explain select city
        from city_id_city as C
        inner join city_id_city_pinyin as CP
        where C.city_id = CP.city_id and CP.city_pinyin = 'shanghai';

        -- +----+-------------+-------+--------+---------------------------+-------------------+---------+-----------------+------+--------------------------+
        -- | id | select_type | table | type   | possible_keys             | key               | key_len | ref             | rows | Extra                    |
        -- +----+-------------+-------+--------+---------------------------+-------------------+---------+-----------------+------+--------------------------+
        -- |  1 | SIMPLE      | CP    | ref    | PRIMARY,index_city_pinyin | index_city_pinyin | 45      | const           |    1 | Using where; Using index |
        -- |  1 | SIMPLE      | C     | eq_ref | PRIMARY                   | PRIMARY           | 2       | test.CP.city_id |    1 | NULL                     |
        -- +----+-------------+-------+--------+---------------------------+-------------------+---------+-----------------+------+--------------------------+
        -- 2 rows in set (0.01 sec)
      #+END_SRC

      rows 变为 1 * 1 ，效率显著提高

2. 获取所有商铺的图片
   1) 原查询

      #+BEGIN_SRC sql
        explain select B.shop_id, D.photos
        from basic as B
        inner join dazhong as D
        where B.shop_id = D.shop_id;
      #+END_SRC

      #+BEGIN_EXAMPLE
        +----+-------------+-------+--------+---------------+---------+---------+----------------+------+-------------+
        | id | select_type | table | type   | possible_keys | key     | key_len | ref            | rows | Extra       |
        +----+-------------+-------+--------+---------------+---------+---------+----------------+------+-------------+
        |  1 | SIMPLE      | D     | ALL    | PRIMARY       | NULL    | NULL    | NULL           |  939 | NULL        |
        |  1 | SIMPLE      | B     | eq_ref | PRIMARY       | PRIMARY | 4       | test.D.shop_id |    1 | Using index |
        +----+-------------+-------+--------+---------------+---------+---------+----------------+------+-------------+
        2 rows in set (0.43 sec)
      #+END_EXAMPLE

      可见 rows 为 939 * 1

   2) 无法优化

      因为每个商铺的图片地址均不相同，故读取所有地址需要遍历全表，无法优化
*** 存在量词（exists）查询
1. 查询产品评价高于 9 的 shop_id, name
   1) 原查询

      #+BEGIN_SRC sql
        explain select B.shop_id, B.name
        from basic as B
        where exists
        (select *
        from remark as R
        where R.shop_id = B.shop_id and R.product_rating > 9);

        -- +----+--------------------+-------+--------+---------------+---------+---------+----------------+------+-------------+
        -- | id | select_type        | table | type   | possible_keys | key     | key_len | ref            | rows | Extra       |
        -- +----+--------------------+-------+--------+---------------+---------+---------+----------------+------+-------------+
        -- |  1 | PRIMARY            | B     | ALL    | NULL          | NULL    | NULL    | NULL           |  963 | Using where |
        -- |  2 | DEPENDENT SUBQUERY | R     | eq_ref | PRIMARY       | PRIMARY | 4       | test.B.shop_id |    1 | Using where |
        -- +----+--------------------+-------+--------+---------------+---------+---------+----------------+------+-------------+
        -- 2 rows in set (0.01 sec)
      #+END_SRC

      可见 rows 为 963 * 1

   2) 添加索引

      因 shop_id 已有索引，故不再添加

      #+BEGIN_SRC sql
        create index index_product_rating on remark(product_rating);
      #+END_SRC

      但添加索引后结果不变，考虑是 exists 的问题

   3) 改为 join 查询

      #+BEGIN_SRC sql
        explain select B.shop_id, B.name
        from basic as B, remark as R
        where R.shop_id = B.shop_id and R.product_rating > 9;

        -- +----+-------------+-------+--------+------------------------------+----------------------+---------+----------------+------+--------------------------+
        -- | id | select_type | table | type   | possible_keys                | key                  | key_len | ref            | rows | Extra                    |
        -- +----+-------------+-------+--------+------------------------------+----------------------+---------+----------------+------+--------------------------+
        -- |  1 | SIMPLE      | R     | range  | PRIMARY,index_product_rating | index_product_rating | 5       | NULL           |    5 | Using where; Using index |
        -- |  1 | SIMPLE      | B     | eq_ref | PRIMARY                      | PRIMARY              | 4       | test.R.shop_id |    1 | NULL                     |
        -- +----+-------------+-------+--------+------------------------------+----------------------+---------+----------------+------+--------------------------+
        -- 2 rows in set (0.05 sec)
      #+END_SRC

      经过添加索引和改为 join 查询后， rows 变为 5 * 1 ，效率显著提高
*** 嵌套子查询（select ... from (select ...)）
1. 查找 stars 大于 4.0 的 shop_id
   1) 原查询

      #+BEGIN_SRC sql
        select shop_id
        from (select * from dazhong where stars > 4.0) as D;

        -- +----+-------------+------------+------+---------------+------+---------+------+------+-------------+
        -- | id | select_type | table      | type | possible_keys | key  | key_len | ref  | rows | Extra       |
        -- +----+-------------+------------+------+---------------+------+---------+------+------+-------------+
        -- |  1 | PRIMARY     | <derived2> | ALL  | NULL          | NULL | NULL    | NULL |  958 | NULL        |
        -- |  2 | DERIVED     | dazhong    | ALL  | NULL          | NULL | NULL    | NULL |  958 | Using where |
        -- +----+-------------+------------+------+---------------+------+---------+------+------+-------------+
        -- 2 rows in set (0.03 sec)
      #+END_SRC

      可见 rows 为 958 * 958 ，效率极低

   2) 添加索引

      #+BEGIN_SRC sql
        create index index_stars on dazhong(stars);
      #+END_SRC

      添加索引后

      #+BEGIN_SRC sql
        explain select shop_id
        from (select * from dazhong where stars > 4.0) as D;

        -- +----+-------------+------------+-------+---------------+-------------+---------+------+------+-----------------------+
        -- | id | select_type | table      | type  | possible_keys | key         | key_len | ref  | rows | Extra                 |
        -- +----+-------------+------------+-------+---------------+-------------+---------+------+------+-----------------------+
        -- |  1 | PRIMARY     | <derived2> | ALL   | NULL          | NULL        | NULL    | NULL |   86 | NULL                  |
        -- |  2 | DERIVED     | dazhong    | range | index_stars   | index_stars | 5       | NULL |   86 | Using index condition |
        -- +----+-------------+------------+-------+---------------+-------------+---------+------+------+-----------------------+
        -- 2 rows in set (0.02 sec)
      #+END_SRC

      rows 降为 86 * 86 ，效率在一定程度上提高

   3) 改为非嵌套查询

      #+BEGIN_SRC sql
        explain select shop_id
        from dazhong where stars > 4.0;

        -- +----+-------------+---------+-------+---------------+-------------+---------+------+------+--------------------------+
        -- | id | select_type | table   | type  | possible_keys | key         | key_len | ref  | rows | Extra                    |
        -- +----+-------------+---------+-------+---------------+-------------+---------+------+------+--------------------------+
        -- |  1 | SIMPLE      | dazhong | range | index_stars   | index_stars | 5       | NULL |   86 | Using where; Using index |
        -- +----+-------------+---------+-------+---------------+-------------+---------+------+------+--------------------------+
        -- 1 row in set (0.01 sec)
      #+END_SRC

      经过添加索引、改为非嵌套查询优化后， rows 降为 86 ，效率显著提高
** 其他查询
*** 向表中插入记录
1. 直接向 city_id_city 中插入新元组
   1) 原查询

      #+BEGIN_SRC sql
        explain insert into city_id_city(city_id, city)
        values (1001, 'test');

        -- +----+-------------+-------+------+---------------+------+---------+------+------+----------------+
        -- | id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra          |
        -- +----+-------------+-------+------+---------------+------+---------+------+------+----------------+
        -- |  1 | SIMPLE      | NULL  | NULL | NULL          | NULL | NULL    | NULL | NULL | No tables used |
        -- +----+-------------+-------+------+---------------+------+---------+------+------+----------------+
        -- 1 row in set (0.00 sec)
      #+END_SRC

      直接插入无需优化
*** 删除记录
1. 直接将 city_id_city 中的一项删除
   1) 原查询

      #+BEGIN_SRC sql
        explain delete
        from city_id_city
        where city = 'test';

        -- +----+-------------+--------------+------+---------------+------+---------+------+------+-------------+
        -- | id | select_type | table        | type | possible_keys | key  | key_len | ref  | rows | Extra       |
        -- +----+-------------+--------------+------+---------------+------+---------+------+------+-------------+
        -- |  1 | SIMPLE      | city_id_city | ALL  | NULL          | NULL | NULL    | NULL |   60 | Using where |
        -- +----+-------------+--------------+------+---------------+------+---------+------+------+-------------+
        -- 1 row in set (0.01 sec)
      #+END_SRC

      rows 为 60

   2) 添加索引

      #+BEGIN_SRC sql
        create index index_city on city_id_city(city);
      #+END_SRC

      添加索引后

      #+BEGIN_SRC sql
        explain delete
        from city_id_city
        where city = 'test';

        -- +----+-------------+--------------+-------+---------------+------------+---------+-------+------+-------------+
        -- | id | select_type | table        | type  | possible_keys | key        | key_len | ref   | rows | Extra       |
        -- +----+-------------+--------------+-------+---------------+------------+---------+-------+------+-------------+
        -- |  1 | SIMPLE      | city_id_city | range | index_city    | index_city | 45      | const |    1 | Using where |
        -- +----+-------------+--------------+-------+---------------+------------+---------+-------+------+-------------+
        -- 1 row in set (0.01 sec)
      #+END_SRC

      rows 变为 1 ，效率显著提高

   3) 使用主键

      使用主键来进行删除操作

      #+BEGIN_SRC sql
        explain delete
        from city_id_city
        where city_id = 1001 and city = 'test';

        -- +----+-------------+--------------+-------+---------------+---------+---------+-------+------+-------------+
        -- | id | select_type | table        | type  | possible_keys | key     | key_len | ref   | rows | Extra       |
        -- +----+-------------+--------------+-------+---------------+---------+---------+-------+------+-------------+
        -- |  1 | SIMPLE      | city_id_city | range | PRIMARY       | PRIMARY | 2       | const |    1 | Using where |
        -- +----+-------------+--------------+-------+---------------+---------+---------+-------+------+-------------+
        -- 1 row in set (0.03 sec)
      #+END_SRC

      rows 也为 1 ，效率显著提高
*** 聚集函数
1. 统计某城市中有多少商铺
   1) 原查询

      #+BEGIN_SRC sql
        explain select count(city_id)
        from shop_id_city_id
        where city_id = 1;

        -- +----+-------------+-----------------+------+---------------+---------+---------+-------+------+-------------+
        -- | id | select_type | table           | type | possible_keys | key     | key_len | ref   | rows | Extra       |
        -- +----+-------------+-----------------+------+---------------+---------+---------+-------+------+-------------+
        -- |  1 | SIMPLE      | shop_id_city_id | ref  | city_id       | city_id | 2       | const |  257 | Using index |
        -- +----+-------------+-----------------+------+---------------+---------+---------+-------+------+-------------+
        -- 1 row in set (0.00 sec)
      #+END_SRC

      rows 为 257 ，但已经是利用了主键索引了，且 count 函数是需要遍历所有 257 个
      结果的，故已经无法再优化了

   2) 实际应用

      在实际应用 count 语句时，使用 =count(*)= 将比 count(/具体键值/) 快。因为
      =count(*)= 利用的是主键索引[fn:1]。
*** 其他查询
1. Like 语句
* Footnotes

[fn:1] http://blog.itpub.net/22664653/viewspace-774679/
